{"version":3,"sources":["Components/cards/card.component.jsx","Components/card-list/card-list.component.jsx","Components/Search-Box/Searchbox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","CardList","monsters","map","SearchBox","placeholder","ChangeEvent","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filtered_Monsters","filter","toLowerCase","includes","e","target","value","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAEaA,EAAO,SAACC,GAAD,OACZ,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACpB,6BAAKL,EAAMI,QAAQE,WCChBC,G,MAAW,SAACP,GACrB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMQ,SAASC,KAAI,SAACL,GAAD,OAChB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCRlBK,EAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,YAAd,OACvB,uBACEX,UAAU,SACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,KC8BCG,E,kDA/Bb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXR,SAAU,GACVS,YAAa,IAJH,E,qDAQhB,WAAqB,IAAD,OAChBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKC,SAAS,CAAEf,SAAUc,S,oBAE/C,WAAU,IAAD,OACL,EAAkCE,KAAKR,MAA/BR,EAAR,EAAQA,SAAUS,EAAlB,EAAkBA,YACZQ,EAAkBjB,EAASkB,QAAO,SAAAtB,GAAO,OAC3CA,EAAQE,KAAKqB,cAAcC,SAASX,EAAYU,kBAEtD,OACE,sBAAK1B,UAAU,MAAf,UACA,kDACE,cAAC,EAAD,CACAU,YAAY,kBACZC,YAAc,SAAAiB,GAAC,OAAI,EAAKN,SAAU,CAAEN,YAAaY,EAAEC,OAAOC,WAE1D,cAAC,EAAD,CAAUvB,SAAUiB,W,GA1BVO,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b435991c.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Card = (props)=>(\n        <div className=\"card-container\">\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\n          <h1>{props.monster.name}</h1>\n        </div>  \n);","import React from 'react';\n\nimport { Card } from \"../cards/card.component\";\nimport './card-list.styles.css';\n\n\nexport const CardList = (props) => {\n    return (\n      <div className=\"card-list\">\n        {props.monsters.map((monster) => (\n            <Card key={monster.id} monster={monster} />\n        ))}\n      </div>\n    );\n}","import React from \"react\";\n\nexport const SearchBox = ({placeholder,ChangeEvent}) => (\n  <input\n    className=\"search\"\n    type=\"search\"\n    placeholder={placeholder}\n    onChange={ChangeEvent}\n  />\n);","import './App.css';\nimport React  from 'react';\nimport { CardList } from './Components/card-list/card-list.component';\nimport { SearchBox } from './Components/Search-Box/Searchbox.component'\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n    //Life Cycle Methods\n  }\ncomponentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n  render() {\n      const { monsters, searchField } = this.state;\n      const filtered_Monsters=monsters.filter(monster=>\n          monster.name.toLowerCase().includes(searchField.toLowerCase())\n        ); \n    return (\n      <div className=\"App\">\n      <h1> Monsters ROLDEX</h1>\n        <SearchBox \n        placeholder=\"Search Monsters\" \n        ChangeEvent= {e => this.setState( { searchField: e.target.value } ) } \n            />\n        <CardList monsters={filtered_Monsters} />\n      </div>\n    );\n  }\n} \n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}